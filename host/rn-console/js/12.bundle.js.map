{"version":3,"sources":["webpack:///./src/components/PanelTitleBar.tsx","webpack:///./src/components/TitleBar.tsx","webpack:///./src/components/container/TInventory/index.tsx","webpack:///./src/components/routable/Inventory/index.tsx"],"names":["EnumTitleType","theme","default","backgroundColor","palette","primary","light","color","common","black","padding","spacing","unit","marginBottom","text","textTransform","fontWeight","expansion","width","classes","children","titleType","getDefinedTitleType","EXPANSION","className","variant","enhance","root","position","closeBtn","textAlign","cursor","left","top","divider","marginTop","title","canClose","history","component","onClick","length","goBack","mixins","gutters","expansionPanelSummary","expansionPanelSummaryTitle","margin","props","super","this","TitleBar","expandIcon","content","PanelTitleBar"],"mappings":"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","file":"12.bundle.js","sourcesContent":["`use strict`\n\nimport * as React from 'react';\nimport { compose } from 'redux';\nimport { withStyles, createStyles, WithStyles, Theme } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nexport enum EnumTitleType {\n  DEFAULT,\n  EXPANSION\n};\n\nconst styles = (theme:Theme) => createStyles({\n  default: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.common.black,\n    padding: theme.spacing.unit,\n    marginBottom: theme.spacing.unit\n  },\n  text: {\n    textTransform: \"uppercase\",\n    fontWeight: 500\n  },\n  expansion: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.common.black,\n    padding: theme.spacing.unit * 2,\n    width: \"100%\"\n  }\n});\n\ninterface PanelTitleBarProps extends WithStyles<typeof styles> {\n  titleType?: EnumTitleType;\n}\n\nconst PanelTitleBar: React.SFC<PanelTitleBarProps> = ({classes, children, titleType}) => {\n  function getDefinedTitleType() {\n    switch(titleType) {\n      case EnumTitleType.EXPANSION:\n        return classes.expansion;\n      default:\n        return classes.default;\n    }\n  }\n\n  if(typeof children === \"string\") {\n    return (\n      <div className={getDefinedTitleType()}>\n        <Typography color={\"inherit\"} variant={\"subtitle1\"} className={classes.text}>\n          {children}\n        </Typography>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className={getDefinedTitleType()}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(PanelTitleBar);\n","`use strict`\n\nimport * as React from 'react';\nimport { compose } from 'redux';\nimport { withStyles, createStyles, WithStyles, Theme } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n    padding: theme.spacing.unit * 2\n  },\n  closeBtn: {\n    position: \"absolute\",\n    width: \"100%\",\n    textAlign: \"right\",\n    cursor: \"pointer\",\n    padding: theme.spacing.unit * 2,\n    left: 0,\n    top: \"5px\"\n  },\n  divider: {\n    marginTop: \"5px\"\n  }\n});\n\ninterface TitleBarProps {\n  title: string;\n  canClose?: boolean;\n}\ninterface TitleBarPropsWithHoc extends TitleBarProps, WithStyles<typeof styles>, RouteComponentProps<any> {}\n\nconst TitleBar: React.SFC<TitleBarPropsWithHoc> = ({title, canClose, history, classes}) => {\n  function onClickClose() {\n    if(history.length > 1){\n      history.goBack();\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\" component=\"h5\">\n        {title}\n      </Typography>\n      {canClose &&\n        (<div className={classes.closeBtn}>\n          <CloseIcon onClick={onClickClose}/>\n        </div>)\n      }\n      <Divider className={classes.divider}/>\n    </div>\n  );\n}\n\nconst enhance = compose<React.SFC<TitleBarProps>>(\n  withRouter,\n  withStyles(styles)\n);\n\nexport default enhance(TitleBar);\n","`use strict`\n\nimport * as React from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport { withStyles, createStyles, WithStyles, Theme } from '@material-ui/core/styles';\nimport PanelTitleBar from \"../../PanelTitleBar\";\nimport {EnumTitleType} from \"../../PanelTitleBar\";\nimport TitleBar from \"../../TitleBar\";\n\nconst styles = (theme:Theme) => createStyles({\n  root: {\n    ...theme.mixins.gutters()\n  },\n  expansionPanelSummary: {\n    padding: 0\n  },\n  expansionPanelSummaryTitle: {\n    margin: \"0 !important\"\n  }\n});\n\ninterface TInventoryProps extends WithStyles<typeof styles> {\n}\n\ninterface TInventoryState {\n}\n\nclass TInventory extends React.PureComponent<TInventoryProps, TInventoryState> {\n  constructor(props:TInventoryProps) {\n    super(props);\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <React.Fragment>\n        <TitleBar title=\"Inventory\" canClose={false}/>\n        <div className={classes.root}>\n          <ExpansionPanel >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>} className={classes.expansionPanelSummary} classes={{\n              content: classes.expansionPanelSummaryTitle\n            }}>\n              <PanelTitleBar titleType={EnumTitleType.EXPANSION}>Operating System</PanelTitleBar>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div>List all available OS on all machines</div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n          <ExpansionPanel >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>} className={classes.expansionPanelSummary} classes={{\n              content: classes.expansionPanelSummaryTitle\n            }}>\n              <PanelTitleBar titleType={EnumTitleType.EXPANSION}>Devices</PanelTitleBar>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div>List all available Devices on all machines</div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n          <ExpansionPanel >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>} className={classes.expansionPanelSummary} classes={{\n              content: classes.expansionPanelSummaryTitle\n            }}>\n              <PanelTitleBar titleType={EnumTitleType.EXPANSION}>Software</PanelTitleBar>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div>List all available Software on all machines</div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n          <ExpansionPanel >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>} className={classes.expansionPanelSummary} classes={{\n              content: classes.expansionPanelSummaryTitle\n            }}>\n              <PanelTitleBar titleType={EnumTitleType.EXPANSION}>Drivers</PanelTitleBar>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <div>List all available Drivers on all machines</div>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(TInventory);\n","import * as React from \"react\";\nimport TInventory from \"../../container/TInventory\";\n\nconst Inventory: React.SFC<any> = () => {\n  return (\n    <TInventory/>\n  );\n};\n\nexport default Inventory;\n"],"sourceRoot":""}
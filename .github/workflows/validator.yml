name: Validate new deployments
on:
  pull_request: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      # as requested by the React team :)
      # https://reactjs.org/blog/2019/10/22/react-release-channels.html#using-the-next-channel-for-integration-testing
      - name: ‚öõÔ∏è Setup react
        run: npm install react@${{ matrix.react }} react-dom@${{ matrix.react }}

      - name: ‚úÖ Validate lint, prettier and build
        run: npm run build

      - name: ‚úÖ Validate test script
        run: npm run test:ci

      - name: üìÅ Code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/cobertura-coverage.xml
          badge: true
          format: "markdown"
          output: "both"

      - name: + Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && !startsWith(github.head_ref, 'dependabot/')
        with:
          recreate: true
          path: code-coverage-results.md

      - name: ‚¨ÜÔ∏è Upload coverage report
        uses: codecov/codecov-action@v3

      - name: ‚úÖ Verify Vercel deployment and update branch
        run: |
          chmod a+x ./.github/scripts/deployment-check.sh && URL=$(./.github/scripts/deployment-check.sh https://walcron-git-${GITHUB_HEAD_REF//\//\\/}-walcoorperation.vercel.app)
          echo url-${URL}
          sed -i "s/http:\/\/localhost:3000/https:\/\/${URL}-walcoorperation.vercel.app/g" backstop.json
          sed -i "s/localhost/.${URL}-walcoorperation.vercel.app/g" backstop.json
          sed -i "s/bitmaps_local_reference/bitmaps_reference/" backstop.json
          sed -i "s/bitmaps_local_test/bitmaps_test/" backstop.json
          cat backstop.json
          sed -i "s/http:\/\/localhost:3000/https:\/\/${URL}-walcoorperation.vercel.app/g" playwright.config.ts
          cat playwright.config.ts
        shell: bash

      - name: üì• Install playwright browsers
        run: npx playwright install --with-deps

      - name: ‚ñ∂Ô∏è Run page functional check
        run: CI=true && npm run playwright:test

      - name: ‚ñ∂Ô∏è Run page rendering check
        continue-on-error: true
        run: npm run backstop:test

      - name: ‚ùì Auto approve
        id: autoapproval
        run: |
          APPROVE_RUN_NUMBER=`cat ./backstopjs.approve`
          echo github [$GITHUB_RUN_NUMBER]
          echo approve [$APPROVE_RUN_NUMBER]
          echo
          if [ "$APPROVE_RUN_NUMBER" = "$GITHUB_RUN_NUMBER" ]; then
              echo 'Auto approve backstop'
              npm run backstop:approve
              rm -rf ./backstop_data/bitmaps_test/*
              git checkout -- backstop.json
              echo "BACKSTOP_APPROVED=true" >> $GITHUB_OUTPUT
          fi

      - name: üíº Auto commit on approved backstop
        uses: stefanzweifel/git-auto-commit-action@v4
        if: steps.autoapproval.outputs.BACKSTOP_APPROVED == 'true'
        with:
          commit_message: Update backstop with auto approval
          file_pattern: "backstop_data/bitmaps_reference/*.png"

      - name: ‚¨ÜÔ∏è Upload snapshot artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backstop-artifact
          path: backstop_data/

      - name: ‚úÖ Validate backstopjs snapshot is valid
        run: chmod a+x ./.github/scripts/snapshot-check.sh && ./.github/scripts/snapshot-check.sh
        shell: bash
